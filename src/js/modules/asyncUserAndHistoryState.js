//  Sigma.asyncUserAndHistoryState module

//  We need to know that both getHistory module and tryLocalStorage/userIsConnected module are completed
module.exports = {
  modulesLoaded: 0,
  makeLiveForUser : function () {
    var _this = this;
    //  Disconnect observers
    Sigma.disconnectObservers();
    //  Check if channel was empty and populate it with a first post
    if (_this.channelIsEmpty) {
      var node = document.querySelector('[data-owner="generated by Sigma"]').parentNode;
      //  If node exists on the client
      if (node !== null) {
        //  Remove it
        node.parentNode.removeChild(node);
        //  Then add a new editable one for the user
        var title = 'Welcome here '+Sigma.username+' !',
            content = 'It seems that you are the very first person on that channel. Try to edit the title and the content of this article!';
        Sigma.addContent(false, undefined, title, content, Sigma.username, true);
      }
    }
    //  Set owner's articles as editable
    Sigma.makeOwnerArticlesEditable();
    //  Attach tools
    Sigma.tools.attach();
    //  Add create button
    Sigma.connectOrCreateButton(false);
    //  Reset and highlight user's articles
    Sigma.resetAndHighlightUserArticles();
    //  Set observers
    Sigma.setObservers();
    //  Welcome user
    Sigma.manageMessage(true, 'Hi '+Sigma.username+'! Nice to see you there!', true);
  },
  check : function () {
    //  Increment when called
    ++this.modulesLoaded;
    //  If two calls occured at least
    if (this.modulesLoaded >= 2) {
      this.makeLiveForUser();
    }
  }
};